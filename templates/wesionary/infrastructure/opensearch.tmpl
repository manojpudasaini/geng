package infrastructure

import (
	"crypto/tls"
	"net/http"
	"{{.ProjectModuleName}}/pkg/framework"

	opensearch "github.com/opensearch-project/opensearch-go/v2"
)

func NewOpenSearchClient(
	env *framework.Env,
	logger framework.Logger,
) *opensearch.Client {
	// generate opensearch URL

	// setup client
	client, err := opensearch.NewClient(opensearch.Config{
		Transport: &http.Transport{
			TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
		},
		Addresses: []string{env.OpenSearchURL},
		Username:  env.OpenSearchAdminUser,
		Password:  env.OpenSearchAdminPass,
	})

	// check error
	if err != nil {
		logger.Info("Url: ", env.OpenSearchURL)
		logger.Panic(err)
	}
	// get opensearch server info
	info, err := client.Info()
	// check error
	if err != nil {
		logger.Info("Failed to get OpenSearch server Infof : ", env.OpenSearchURL)
		logger.Panic(err)
	}

	if info.IsError() {
		logger.Errorf("OpenSearch ERROR CODE: %d, Error: %s\n\n", info.StatusCode, err)
		logger.Panic(info)
	}
	logger.Info("Connected to OpenSearch: ", info)

	// return client
	return client
}